#import "../lib.typ": *

#set heading(numbering: none)
= Введение <intro>

Разработка программного обеспечения (ПО) --- сложнейший технологический процесс, в котором, одной из основных задач для разработчика является перенос реальности в абстрактрую доменную модель. Современные языки программирования стремятся предоставить разработчикам инструменты для эффективной работы со сложными данными, в то же время обеспечивая высокий уровень абстракции. Одним из таких инструментов, заимствованных из функционального программирования является "Оптика" -- семейство абстракций, включающих в себя изоморфизмы, линзы, призмы и другие.

Традиционные императивные подходы часто требуют написания большого количества шаблонного кода для обновления отдельных полей модели, что не только увеличивает вероятность ошибок, но и затрудняет поддержку и расширение кода. Кроме того, обеспечение типобезопасности при таких операциях становится нетривиальной задачей.

В данной работе рассматривается добавление механизма "Оптики" в язык @cangjie, позволяющих упростить работу с неизменяемыми структурами данными путем уменьшения объема написанного кода, предоставления интуитивно понятного интерфейса и типовых гарантий. Для этого, были приведены примеры сценариев, где применение "Оптики" упрощало бы взаимодействие с доменной моделью. Во-вторых, были проведен детальный анализ предметной области "Оптики": существующие модели "Оптики", реализации в объектно-ориентированных языках. В-третьих, на основе опыты других реализаций, была реализована версия для языка, с соответсвующими модификациями, позволяющими ей быть близкой по производительности с аналогичным императивным кодом. И наконец, библиотека "Оптики" была реализована и протестирована.
